system {
  benchmark {
    user = ${system.default.user}
    group = ${system.default.group}
    # basic directory structure of the extracted system binary
    path {
      isShared = ${system.default.path.isShared}
      archive.dst = ${app.path.systems}
      config = ${system.benchmark.path.home}"/config"
      libs = ${system.benchmark.path.home}"/libs"
      pids = ${java.io.tmpdir}"/stream/streamgenerator.pids"
    }
    startup {
      timeout = 5
    }
    config {
      hosts = [${runtime.hostname}]

      bootstrap {
        servers = ${runtime.hostname}":9092"
      }

      zookeeper {
        connect = ${runtime.hostname}":2181"
      }
      kafka {
        group {
          id = "yauza"
        }
        topic {
          input = "yauza-input"
          outputs = ["out-avr-price", "out-avr-session-duration","out-uniq-sessions-number","out-uniq-users-number"]
        }

        partition = 3
      }

      spark {
        master = "spark://"${runtime.hostname}":7077"

        streaming {
          receiver {
            maxRate = 100000
          }

          kafka {
            maxRatePerPartition = 100000
          }
        }
      }

      benchmark {
        hdfs = "hdfs://"${runtime.hostname}":9000"
        datafile = "/yauza-benchmark/datafile.json"

        messages {
          number = 1000000
          per {
            second = 0
          }
        }
        datagenerator {
          directuploader
            {
              threads = 1
            }
        }

        data {
          uniqueusers
            {
              number = 1000
            }

          purchase
            {
              maxprice = 1000
              percentage = 10
            }
        }
        runtime
          {
            partitions.number = 3
            window.duration = 10

            duration = 60
          }
      }
    }
  }
}
